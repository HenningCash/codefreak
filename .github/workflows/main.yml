name: CI

on:
  push:
  pull_request:
  release:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version (use actual version number)'
        required: true
        default: '<major>.<minor>.<patch>'

jobs:
  main:
    runs-on: ubuntu-16.04
    env:
      # webpack build needs a lot of memory
      NODE_OPTIONS: --max_old_space_size=4096
      GITHUBUSER: ${{ secrets.GITHUBUSER }}
      GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Assemble
        run: ./gradlew assemble -x bootJar

      - name: Check code
        run: ./gradlew check

      - name: Jib Docker Build
        run: ./gradlew jibDockerBuild -x check

      - name: Before cache
        run: |
          rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
          rm -fr $HOME/.gradle/caches/*/plugin-resolution/

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Before Deploy
        if: github.ref == 'ref/head/master' || startsWith(github.ref, 'ref/tags') || github.event_name == 'workflow_dispatch'
        run: |
          pip3 install --user --upgrade pip
          pip3 install --user docker-ci-deploy
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Deploy master branch as latest
        if: github.ref == 'ref/head/master'
        run: docker-ci-deploy --tag canary -- cfreak/codefreak

      - name: Deploy tags
        if: startsWith(github.ref, 'ref/tags')
        run: docker-ci-deploy --version-latest --version ${GITHUB_REF/refs\/tags\//} --version-semver cfreak/codefreak

      - name: Publish release
        if: github.event_name == 'workflow_dispatch'
        run: |
          git remote set-url origin https://$GITHUBTOKEN@github.com/${{ github.repository }}.git
          git config --global user.email "$GITHUBUSER"
          git config --global user.name "CI"
          git checkout ${{ github.ref }}
          ./gradlew release -x check -x bootJar -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ github.event.inputs.releaseVersion }}
