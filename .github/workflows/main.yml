name: CI

on: [push, pull_request, release]

jobs:
  main:
    runs-on: ubuntu-20.04
    env:
      # webpack build needs a lot of memory
      NODE_OPTIONS: --max_old_space_size=4096
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Test
        run: ./gradlew jibDockerBuild -x bootJar

      - name: Prepare cache
        run: |
          rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
          rm -fr $HOME/.gradle/caches/*/plugin-resolution/

      - name: Before Deploy
        if: github.ref == 'refs/head/master' || startsWith(github.ref, 'refs/tags')
        run: |
          pip3 install --user --upgrade pip
          pip3 install --user docker-ci-deploy
          docker logout
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Deploy master branch as latest
        if: github.ref == 'refs/head/master'
        run: docker-ci-deploy --tag canary -- cfreak/codefreak

      # ${GITHUB_REF/refs\/tags\//} returns the tag name from 'refs/tags/TAG_NAME'
      - name: Deploy tags
        if: startsWith(github.ref, 'refs/tags')
        run: docker-ci-deploy --version-latest --version ${GITHUB_REF/refs\/tags\//} --version-semver cfreak/codefreak
