language: java

services:
  - docker

# The commands are in order how they are executed in a job lifecycle
# https://docs.travis-ci.com/user/job-lifecycle#the-job-lifecycle

before_install:
  - docker pull cfreak/ide:latest

before_script:
  # Build images we depend on before running the tests
  - docker build
    --build-arg GITHUB_TOKEN
    --build-arg GIT_COMMIT="$TRAVIS_COMMIT"
    --build-arg GIT_TAG="$TRAVIS_TAG"
    -t cfreak/ide:latest --cache-from cfreak/ide:latest $TRAVIS_BUILD_DIR/ide

# Run gradle checks and try to build the Docker image as latest
script:
  - ./gradlew check
  - docker build --build-arg GITHUB_TOKEN -t cfreak/code-freak:latest $TRAVIS_BUILD_DIR

after_success:
  - ./gradlew jacocoTestReport coveralls

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

# build & push image to Docker Cloud
# The Autobuild feature of Docker Cloud has been too slow in the past so we use Travis
before_deploy:
  - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
deploy:
  # deploy master branch as latest
  - provider: script
    on:
      branch: master
    script: docker push cfreak/ide:latest && docker push cfreak/code-freak:latest
  # deploy tags
  # TODO: also tag and deploy minor and major version (1.2.3 as 1.2 and 1)
  - provider: script
    on:
      tags: true
    script: docker tag cfreak/ide:latest cfreak/ide:$TRAVIS_TAG
            && docker tag cfreak/code-freak:latest cfreak/code-freak:$TRAVIS_TAG
            && docker push cfreak/ide:$TRAVIS_TAG
            && docker push cfreak/code-freak:$TRAVIS_TAG
  # deploy demo branch
  - provider: script
    on:
      branch: demo
    script: docker tag cfreak/ide:latest cfreak/ide:demo
            && docker tag cfreak/code-freak:latest cfreak/code-freak:demo
            && docker push cfreak/ide:demo
            && docker push cfreak/code-freak:demo
