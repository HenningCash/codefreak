language: java
dist: xenial
services:
  - docker

addons:
  apt:
    packages:
      - python3
      - python3-pip

# The commands are in order how they are executed in a job lifecycle
# https://docs.travis-ci.com/user/job-lifecycle#the-job-lifecycle

before_install:
  # https://github.com/praekeltfoundation/docker-ci-deploy
  - pip3 install --user --upgrade pip
  - pip3 install --user docker-ci-deploy
  - docker pull cfreak/ide:latest

before_script:
  # Build images we depend on before running the tests
  - docker build
    --build-arg GITHUB_TOKEN
    -t cfreak/ide:latest --cache-from cfreak/ide:latest $TRAVIS_BUILD_DIR/ide

# Run gradle checks and try to build the Docker image as latest
script:
  - ./gradlew check
  - docker build
    --build-arg GITHUB_TOKEN
    --build-arg GIT_COMMIT="$TRAVIS_COMMIT"
    --build-arg GIT_TAG="$TRAVIS_TAG"
    -t cfreak/code-freak:latest $TRAVIS_BUILD_DIR

after_success:
  # Disable TLS 1.3: https://bugs.openjdk.java.net/browse/JDK-8221253
  - ./gradlew -Djdk.tls.client.protocols="TLSv1,TLSv1.1,TLSv1.2" jacocoTestReport coveralls

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

# build & push image to Docker Cloud
# The Autobuild feature of Docker Cloud has been too slow in the past so we use Travis
before_deploy:
  - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
deploy:
  # deploy master branch as latest
  - provider: script
    on:
      branch: master
    script: docker-ci-deploy --tag canary -- cfreak/ide
            && docker-ci-deploy --tag canary -- cfreak/code-freak
  # deploy tags
  - provider: script
    on:
      tags: true
    # This will also tag and deploy minor and major version (1.2.3 as 1.2 and 1)
    script: docker-ci-deploy --version-latest --version $TRAVIS_TAG --version-semver cfreak/ide
            && docker-ci-deploy --version-latest --version $TRAVIS_TAG --version-semver cfreak/code-freak
  # deploy demo branch
  - provider: script
    on:
      branch: demo
    script: docker-ci-deploy --tag demo -- cfreak/ide
            && docker-ci-deploy --tag demo -- cfreak/code-freak
